plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.openapi.generator' version '7.16.0'
    id 'jacoco'
}

group = 'com.theawesomeengineer'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

jacoco {
    toolVersion = "0.8.10"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.13'

    implementation 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    implementation 'com.mysql:mysql-connector-j:8.3.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation 'org.mockito:mockito-core:5.12.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.5.0'

    testImplementation 'org.testcontainers:junit-jupiter:1.21.3'
    testImplementation 'org.testcontainers:mysql:1.21.3'
    testImplementation 'com.h2database:h2'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$projectDir/openapi.yaml"
    outputDir = "$buildDir/generated-sources/openapi"
    skipOverwrite = true
    apiPackage = "com.theawesomeengineer.taskmanager.api"
    modelPackage = "com.theawesomeengineer.taskmanager.model"
    invokerPackage = "com.theawesomeengineer.taskmanager"
    configOptions = [
            "interfaceOnly" : "true",
            "useSpringBoot3": "true",
            "useTags"       : "true",
            "useJakartaEe"  : "true",
            "dateLibrary"   : "java8",
            "basePackage"   : "com.theawesomeengineer.taskmanager"
    ]
}

tasks.named('test') {
    useJUnitPlatform()
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }

    afterEvaluate {
        classDirectories.setFrom(
                files(classDirectories.files.collect {
                    fileTree(dir: it, exclude: [
                            'com/theawesomeengineer/taskmanager/openapi/**',
                    ])
                })
        )
    }
}

check.dependsOn jacocoTestCoverageVerification

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.8
            }
        }
    }
    classDirectories.setFrom(
            files(classDirectories.files.collect {
                fileTree(dir: it, exclude: [
                        'com/theawesomeengineer/taskmanager/openapi/**',
                ])
            })
    )
}
